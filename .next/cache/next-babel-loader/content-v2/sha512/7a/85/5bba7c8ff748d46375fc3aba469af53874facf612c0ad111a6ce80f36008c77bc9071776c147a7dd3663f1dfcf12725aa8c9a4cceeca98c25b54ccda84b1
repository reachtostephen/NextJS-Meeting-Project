{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenraj/Desktop/React_Apps/NextJs - Big Project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: \"https://images.pexels.com/photos/3183150/pexels-photo-3183150.jpeg\",\n    title: \"First Meeting\",\n    address: \"Some PR\",\n    description: \"This is the First meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://stephen:AIVagU0dwbpMTeqF@cluster0.mq5br.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://images.pexels.com/photos/3183150/pexels-photo-3183150.jpeg\",\n        id: meetupId,\n        title: \"First Meetup\",\n        address: \"Some PR\",\n        description: \"This is the First Meeting\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/stephenraj/Desktop/React_Apps/NextJs - Big Project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetUpDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","meetupId","close","meetups","find","toArray","fallback","paths","map","meetup","params","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,oEADR;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,+GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAA1B,CAA7B;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,QAAMC,OAAO,GAAG,MAAMP,iBAAiB,CAACQ,IAAlB,CAAuB,EAAvB,EAA2B;AAAEJ,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCK,OAAvC,EAAtB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAET,QAAAA,QAAQ,EAAEQ,MAAM,CAACT,GAAP,CAAWW,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMZ,QAAQ,GAAGY,OAAO,CAACH,MAAR,CAAeT,QAAhC;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACA,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,oEAFQ;AAGVC,QAAAA,EAAE,EAAElB,QAHM;AAIVmB,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,SALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe/B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetUpDetail\n      image=\"https://images.pexels.com/photos/3183150/pexels-photo-3183150.jpeg\"\n      title=\"First Meeting\"\n      address=\"Some PR\"\n      description=\"This is the First meetup\"\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://stephen:AIVagU0dwbpMTeqF@cluster0.mq5br.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n  client.close();\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://images.pexels.com/photos/3183150/pexels-photo-3183150.jpeg\",\n        id: meetupId,\n        title: \"First Meetup\",\n        address: \"Some PR\",\n        description: \"This is the First Meeting\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}